/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.EmployeeProfile;
import model.EmployeeProfileHistory;

/**
 *
 * @author leonardodicaprio
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    
    EmployeeProfileHistory history;
//    EmployeeProfile employeeProfile;
    
    public ViewJPanel(EmployeeProfileHistory history) {
        initComponents();
        
        this.history = history;
//        this.employeeProfile = employeeProfile;
        
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jView = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTView = new javax.swing.JTable();
        jBView = new javax.swing.JButton();
        jBDelete = new javax.swing.JButton();
        jName = new javax.swing.JLabel();
        jVphoto = new javax.swing.JLabel();
        jTextName = new javax.swing.JTextField();
        jE_ID = new javax.swing.JLabel();
        jTextEmployeeID = new javax.swing.JTextField();
        jAge = new javax.swing.JLabel();
        jTextAge = new javax.swing.JTextField();
        jGender = new javax.swing.JLabel();
        jTextGender = new javax.swing.JTextField();
        jStartDate = new javax.swing.JLabel();
        jTextStartDate = new javax.swing.JTextField();
        jLevel = new javax.swing.JLabel();
        jTextLevel = new javax.swing.JTextField();
        jTeamInfo = new javax.swing.JLabel();
        jTextTeam = new javax.swing.JTextField();
        jPositionTitle = new javax.swing.JLabel();
        jTextPositionTitle = new javax.swing.JTextField();
        jCellPhoneNumber = new javax.swing.JLabel();
        jTextCellPhone = new javax.swing.JTextField();
        jEmail = new javax.swing.JLabel();
        jTextEmail = new javax.swing.JTextField();
        jBEdit = new javax.swing.JButton();
        jBSearch = new javax.swing.JButton();
        jTextSearch = new javax.swing.JTextField();

        jView.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jView.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jView.setText("Employee Profile");

        jTView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "ID", "Age", "Gender", "Start Date", "Level", "Team Info", "Position Title", "Cell Phone Number", "Email Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTViewMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTView);

        jBView.setText("View");
        jBView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBViewActionPerformed(evt);
            }
        });

        jBDelete.setText("Delete");
        jBDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDeleteActionPerformed(evt);
            }
        });

        jName.setText("Name");

        jE_ID.setText("Employee ID");

        jAge.setText("Age");

        jGender.setText("Gender");

        jStartDate.setText("Start date");

        jLevel.setText("Level");

        jTeamInfo.setText("Team Info");

        jPositionTitle.setText("Position Title");

        jCellPhoneNumber.setText("Cell Phone Number");

        jTextCellPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextCellPhoneActionPerformed(evt);
            }
        });

        jEmail.setText("Email Address");

        jBEdit.setText("Update");
        jBEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBEditMouseClicked(evt);
            }
        });
        jBEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditActionPerformed(evt);
            }
        });

        jBSearch.setText("Search");
        jBSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jView, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBView)
                .addGap(71, 71, 71)
                .addComponent(jBEdit)
                .addGap(72, 72, 72)
                .addComponent(jBDelete)
                .addGap(57, 57, 57))
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jTeamInfo)
                            .addGap(18, 18, 18)
                            .addComponent(jTextTeam, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBSearch)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jName)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jVphoto, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(0, 0, Short.MAX_VALUE)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jAge, javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addComponent(jGender, javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addComponent(jStartDate, javax.swing.GroupLayout.Alignment.TRAILING)))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jE_ID)
                                                        .addGap(0, 0, Short.MAX_VALUE)))
                                                .addGap(21, 21, 21)))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextName, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                                            .addComponent(jTextEmployeeID, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                                            .addComponent(jTextAge)
                                            .addComponent(jTextGender)
                                            .addComponent(jTextStartDate, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))
                                        .addGap(107, 107, 107))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jTextSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(220, 220, 220)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jPositionTitle)
                                            .addGap(18, 18, 18)
                                            .addComponent(jTextPositionTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(55, 55, 55)
                                            .addComponent(jLevel)
                                            .addGap(18, 18, 18)
                                            .addComponent(jTextLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jEmail)
                                            .addComponent(jCellPhoneNumber))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextCellPhone)
                                            .addComponent(jTextEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE))))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jView)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jVphoto, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jName)
                            .addComponent(jTextName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLevel)
                            .addComponent(jTextLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jE_ID)
                            .addComponent(jTextEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTeamInfo)
                            .addComponent(jTextTeam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jAge)
                            .addComponent(jTextAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPositionTitle)
                            .addComponent(jTextPositionTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jGender)
                    .addComponent(jTextGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCellPhoneNumber)
                    .addComponent(jTextCellPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jStartDate)
                    .addComponent(jTextStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jEmail)
                        .addComponent(jTextEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBSearch)
                    .addComponent(jTextSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBView)
                    .addComponent(jBDelete)
                    .addComponent(jBEdit))
                .addGap(16, 16, 16))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jBDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDeleteActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = jTView.getSelectedRow();
        
        if (selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row to delete");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) jTView.getModel();
        EmployeeProfile selectedEP = (EmployeeProfile)model.getValueAt(selectedRowIndex, 0);
        
        history.deleteEP(selectedEP);
        
        JOptionPane.showMessageDialog(this, "Employee profile deleted");
        
        populateTable();
        
        jTextName.setText("");
        jTextEmployeeID.setText("");
        jTextAge.setText("");
        jTextGender.setText("");
        jTextStartDate.setText("");
        jTextLevel.setText("");
        jTextTeam.setText("");
        jTextPositionTitle.setText("");
        jTextCellPhone.setText("");
        jTextEmail.setText("");
    }//GEN-LAST:event_jBDeleteActionPerformed

    private void jBViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBViewActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = jTView.getSelectedRow();
        
//        if (selectedRowIndex<0){
//            JOptionPane.showMessageDialog(this, "Please select a row to view");
//            return;
//        }
        
        DefaultTableModel model = (DefaultTableModel) jTView.getModel();
        EmployeeProfile selectedEP = (EmployeeProfile)model.getValueAt(selectedRowIndex, 0);
        
        jTextName.setText(String.valueOf(selectedEP.getName()));
        jTextEmployeeID.setText(String.valueOf(selectedEP.getId()));
        jTextAge.setText(String.valueOf(selectedEP.getAge()));
        jTextGender.setText(String.valueOf(selectedEP.getGender()));
        jTextStartDate.setText(String.valueOf(selectedEP.getStartDate()));
        jTextLevel.setText(String.valueOf(selectedEP.getLevel()));
        jTextTeam.setText(String.valueOf(selectedEP.getTeamInfo()));
        jTextPositionTitle.setText(String.valueOf(selectedEP.getPositionTitle()));
        jTextCellPhone.setText(String.valueOf(selectedEP.getContactInfo1()));
        jTextEmail.setText(String.valueOf(selectedEP.getContactInfo2()));
        
        ImageIcon imi = new ImageIcon(new ImageIcon(history.getHistory().get(selectedRowIndex).getPhotoUrl())
                .getImage().getScaledInstance(jVphoto.getWidth(), jVphoto.getHeight(), Image.SCALE_SMOOTH));
        jVphoto.setIcon(imi);
        
        
    }//GEN-LAST:event_jBViewActionPerformed

    private void jTextCellPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextCellPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextCellPhoneActionPerformed

    private void jBEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = jTView.getSelectedRow();
        
        if (selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row to edit");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) jTView.getModel();
//        EmployeeProfile selectedEP = (EmployeeProfile)model.getValueAt(selectedRowIndex, 0);
        EmployeeProfile selectedEP = history.getHistory().get(selectedRowIndex);
        
        model.setValueAt(jTextName.getText(), selectedRowIndex, 0);
        model.setValueAt(jTextEmployeeID.getText(), selectedRowIndex, 1);
        model.setValueAt(jTextAge.getText(), selectedRowIndex, 2);
        model.setValueAt(jTextGender.getText(), selectedRowIndex, 3);
        model.setValueAt(jTextStartDate.getText(), selectedRowIndex, 4);
        model.setValueAt(jTextLevel.getText(), selectedRowIndex, 5);
        model.setValueAt(jTextTeam.getText(), selectedRowIndex, 6);
        model.setValueAt(jTextPositionTitle.getText(), selectedRowIndex, 7);
        model.setValueAt(jTextCellPhone.getText(), selectedRowIndex, 8);
        model.setValueAt(jTextEmail.getText(), selectedRowIndex, 9);
        
        String name = jTextName.getText();
        String id = jTextEmployeeID.getText();
        String age = jTextAge.getText();
        String gender = jTextGender.getText();
        String startDate = jTextStartDate.getText();
        String level = jTextLevel.getText();
        String teamInfo = jTextTeam.getText();
        String positionTitle = jTextPositionTitle.getText();
        String cellPhoneNumber = jTextCellPhone.getText();
        String emailAddress = jTextEmail.getText();
        
        selectedEP.setName(name);
        selectedEP.setId(id);
        selectedEP.setAge(age);
        selectedEP.setGender(gender);
        selectedEP.setStartDate(startDate);
        selectedEP.setLevel(level);
        selectedEP.setTeamInfo(teamInfo);
        selectedEP.setPositionTitle(positionTitle);
        selectedEP.setContactInfo1(cellPhoneNumber);
        selectedEP.setContactInfo2(emailAddress);
        
        
//        String name = jTextName.getText();
//        String id = jTextEmployeeID.getText();
//        String age = jTextAge.getText();
//        String gender = jTextGender.getText();
//        String startDate = jTextStartDate.getText();
//        String level = jTextLevel.getText();
//        String teamInfo = jTextTeam.getText();
//        String positionTitle = jTextPositionTitle.getText();
//        String cellPhoneNumber = jTextCellPhone.getText();
//        String emailAddress = jTextEmail.getText();
//        
//        EmployeeProfile ep = history.addNewEmployee();
//        ep.setName(name);
//        ep.setId(id);
//        ep.setAge(age);
//        ep.setGender(gender);
//        ep.setStartDate(startDate);
//        ep.setLevel(level);
//        ep.setTeamInfo(teamInfo);
//        ep.setPositionTitle(positionTitle);
//        ep.setContactInfo1(cellPhoneNumber);
//        ep.setContactInfo2(emailAddress);
        
        JOptionPane.showMessageDialog(this, "The information has been updated");
        
        jTextName.setText("");
        jTextEmployeeID.setText("");
        jTextAge.setText("");
        jTextGender.setText("");
        jTextStartDate.setText("");
        jTextLevel.setText("");
        jTextTeam.setText("");
        jTextPositionTitle.setText("");
        jTextCellPhone.setText("");
        jTextEmail.setText("");
        jVphoto.setIcon(null);
        
        populateTable();
    }//GEN-LAST:event_jBEditActionPerformed

    private void jTViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTViewMouseClicked
        // TODO add your handling code here:
        
        int selectedRowIndex = jTView.getSelectedRow();
        
        if (selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row to edit");
            return;
        }
        
//        DefaultTableModel model = (DefaultTableModel) jTView.getModel();
////        EmployeeProfile selectedEP = (EmployeeProfile)model.getValueAt(selectedRowIndex, 0);
//        
//        jTextName.setText(model.getValueAt(selectedRowIndex, 0).toString());
//        jTextEmployeeID.setText(model.getValueAt(selectedRowIndex, 1).toString());
//        jTextAge.setText(model.getValueAt(selectedRowIndex, 2).toString());
//        jTextGender.setText(model.getValueAt(selectedRowIndex, 3).toString());
//        jTextStartDate.setText(model.getValueAt(selectedRowIndex, 4).toString());
//        jTextLevel.setText(model.getValueAt(selectedRowIndex, 5).toString());
//        jTextTeam.setText(model.getValueAt(selectedRowIndex, 6).toString());
//        jTextPositionTitle.setText(model.getValueAt(selectedRowIndex, 7).toString());
//        jTextCellPhone.setText(model.getValueAt(selectedRowIndex, 8).toString());
//        jTextEmail.setText(model.getValueAt(selectedRowIndex, 9).toString());
//        
//        ImageIcon imi = new ImageIcon(new ImageIcon(history.getHistory().get(selectedRowIndex).getPhotoUrl())
//                .getImage().getScaledInstance(jVphoto.getWidth(), jVphoto.getHeight(), Image.SCALE_SMOOTH));
//        jVphoto.setIcon(imi);
        
    }//GEN-LAST:event_jTViewMouseClicked

    private void jBEditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBEditMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jBEditMouseClicked

    private void jBSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSearchActionPerformed
        // TODO add your handling code here:
        
        String productName = jTextSearch.getText();
        populateTable(productName);
    }//GEN-LAST:event_jBSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jAge;
    private javax.swing.JButton jBDelete;
    private javax.swing.JButton jBEdit;
    private javax.swing.JButton jBSearch;
    private javax.swing.JButton jBView;
    private javax.swing.JLabel jCellPhoneNumber;
    private javax.swing.JLabel jE_ID;
    private javax.swing.JLabel jEmail;
    private javax.swing.JLabel jGender;
    private javax.swing.JLabel jLevel;
    private javax.swing.JLabel jName;
    private javax.swing.JLabel jPositionTitle;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jStartDate;
    private javax.swing.JTable jTView;
    private javax.swing.JLabel jTeamInfo;
    private javax.swing.JTextField jTextAge;
    private javax.swing.JTextField jTextCellPhone;
    private javax.swing.JTextField jTextEmail;
    private javax.swing.JTextField jTextEmployeeID;
    private javax.swing.JTextField jTextGender;
    private javax.swing.JTextField jTextLevel;
    private javax.swing.JTextField jTextName;
    private javax.swing.JTextField jTextPositionTitle;
    private javax.swing.JTextField jTextSearch;
    private javax.swing.JTextField jTextStartDate;
    private javax.swing.JTextField jTextTeam;
    private javax.swing.JLabel jView;
    private javax.swing.JLabel jVphoto;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        
        DefaultTableModel model = (DefaultTableModel) jTView.getModel();
        model.setRowCount(0);
        
        for (EmployeeProfile ep : history.getHistory()){
            
            Object[] row = new Object[10];
            row[0] = ep;
            row[1] = ep.getId();
            row[2] = ep.getAge();
            row[3] = ep.getGender();
            row[4] = ep.getStartDate();
            row[5] = ep.getLevel();
            row[6] = ep.getTeamInfo();
            row[7] = ep.getPositionTitle();
            row[8] = ep.getContactInfo1();
            row[9] = ep.getContactInfo2();
            
            
            
            model.addRow(row);
            
        }
        
    }
    
    private void populateTable(String keyword) {
        
        DefaultTableModel model = (DefaultTableModel) jTView.getModel();
        model.setRowCount(0);
        
        for (EmployeeProfile ep : history.getHistory()){
            if(ep.getName().equalsIgnoreCase(keyword)){
            
                Object[] row = new Object[10];
                row[0] = ep;
                row[1] = ep.getId();
                row[2] = ep.getAge();
                row[3] = ep.getGender();
                row[4] = ep.getStartDate();
                row[5] = ep.getLevel();
                row[6] = ep.getTeamInfo();
                row[7] = ep.getPositionTitle();
                row[8] = ep.getContactInfo1();
                row[9] = ep.getContactInfo2();



                model.addRow(row);
            }
            
        }
    }
}
